local players = game:GetService("Players")
local camera = workspace.CurrentCamera

-- Function to create a line
local function createLine()
    local line = Drawing.new("Line")
    line.Color = Color3.new(1, 1, 1) -- White
    line.Thickness = 2
    line.Transparency = 1
    return line
end

-- Store ESP lines for all players
local espLines = {}

-- Update ESP for a player
local function updateESP(player)
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end

    -- Ensure lines are created for this player
    if not espLines[player] then
        espLines[player] = {}
        for i = 1, 20 do
            table.insert(espLines[player], createLine())
        end
    end

    local lines = espLines[player]

    -- Update the skeleton drawing
    game:GetService("RunService").RenderStepped:Connect(function()
        if not character or not character:FindFirstChild("HumanoidRootPart") then
            for _, line in pairs(lines) do
                line.Visible = false
            end
            return
        end

        local parts = {
            head = character:FindFirstChild("Head"),
            torso = character:FindFirstChild("UpperTorso") or character:FindFirstChild("Torso"),
            leftArm = character:FindFirstChild("LeftUpperArm"),
            rightArm = character:FindFirstChild("RightUpperArm"),
            leftHand = character:FindFirstChild("LeftHand"),
            rightHand = character:FindFirstChild("RightHand"),
            leftLeg = character:FindFirstChild("LeftUpperLeg"),
            rightLeg = character:FindFirstChild("RightUpperLeg"),
            leftFoot = character:FindFirstChild("LeftFoot"),
            rightFoot = character:FindFirstChild("RightFoot"),
        }

        -- Convert part positions to screen positions
        local positions = {}
        for name, part in pairs(parts) do
            if part then
                local position, visible = camera:WorldToViewportPoint(part.Position)
                positions[name] = visible and Vector2.new(position.X, position.Y) or nil
            end
        end

        -- Draw skeleton lines
        local i = 1
        local function drawLine(from, to)
            if positions[from] and positions[to] then
                lines[i].From = positions[from]
                lines[i].To = positions[to]
                lines[i].Visible = true
                i = i + 1
            end
        end

        drawLine("head", "torso") -- Head to torso
        drawLine("torso", "leftArm") -- Torso to left arm
        drawLine("leftArm", "leftHand") -- Left arm to left hand
        drawLine("torso", "rightArm") -- Torso to right arm
        drawLine("rightArm", "rightHand") -- Right arm to right hand
        drawLine("torso", "leftLeg") -- Torso to left leg
        drawLine("leftLeg", "leftFoot") -- Left leg to left foot
        drawLine("torso", "rightLeg") -- Torso to right leg
        drawLine("rightLeg", "rightFoot") -- Right leg to right foot

        -- Hide unused lines
        for j = i, #lines do
            lines[j].Visible = false
        end
    end)
end

-- Apply ESP to all players
local function applyESPToAll()
    for _, player in pairs(players:GetPlayers()) do
        if not espLines[player] then
            espLines[player] = {}
        end
        updateESP(player)
    end
end

-- Listen for new players and apply ESP
players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function()
        updateESP(player)
    end)
end)

-- Initialize ESP for all existing players
applyESPToAll()
